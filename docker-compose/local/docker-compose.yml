---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: confluent-microservices-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: confluent-microservices-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  rate:
    image: daniellavoie/confluent-microservices-rate:0.0.1-SNAPSHOT
    depends_on:
    - kafka
    restart: always
    ports:
    - 8081:8080
    environment:
    - "coinbase.mock.enabled=false"
    - "spring.cloud.stream.kafka.binder.producer-properties.schema.registry.url=https://schema-registry.confluent.daniellavoie.dev"
    - "spring.cloud.stream.kafka.binder.brokers=kafka"

  transaction:
    image: daniellavoie/confluent-microservices-transaction:0.0.1-SNAPSHOT
    depends_on:
    - kafka
    restart: always
    environment:
    - OPERATION_KAFKA_BOOTSTRAP_SERVERS=kafka
    ports:
    - 8082:8080

  wallet:
    image: daniellavoie/confluent-microservices-wallet:0.0.1-SNAPSHOT
    depends_on:
    - kafka
    restart: always
    ports:
    - 8083:8080
    environment:
    - WALLET_KAFKA_BOOTSTRAP_SERVERS=kafka
    - WALLET_CORS_ORIGINS=http://localhost:8080

  ui:
    image: daniellavoie/confluent-microservices-ui:0.0.1-SNAPSHOT
    depends_on:
    - kafka
    restart: always
    environment:
    - URLS_SPOTTER=http://localhost:8081
    - URLS_OPERATION=http://localhost:8082
    - URLS_WALLET=http://localhost:8083
    ports:
    - 8080:8080
